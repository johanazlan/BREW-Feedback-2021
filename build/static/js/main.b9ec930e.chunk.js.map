{"version":3,"sources":["event.js","reportWebVitals.js","index.js"],"names":["eventList","title","subheader","link","href","code","Event","className","style","textAlign","fontFamily","Container","Grid","container","spacing","map","props","item","key","xs","md","lg","Card","elevation","CardHeader","titleTypographyProps","variant","CardContent","Typography","fontWeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAmDA,IAAMA,EAAY,CACd,CACIC,MAAO,gBACPC,UAAW,cAEXC,KAAM,uBAAGC,KAAO,+BAAV,iBACNC,KAAM,SAEV,CACIJ,MAAO,QACPC,UAAW,iBACXC,KAAM,uBAAGC,KAAO,+BAAV,SACNC,KAAM,SAEV,CACIJ,MAAO,UACPC,UAAW,iBACXC,KAAM,uBAAGC,KAAO,+BAAV,WACNC,KAAM,SAEV,CACIJ,MAAO,KACPC,UAAW,iBACXC,KAAM,uBAAGC,KAAO,+BAAV,MACNC,KAAM,SAEV,CACIJ,MAAO,SACPC,UAAW,kBACXC,KAAM,uBAAGC,KAAO,+BAAV,UACNC,KAAM,SAEV,CACIJ,MAAO,iCACPC,UAAW,cACXC,KAAM,uBAAGC,KAAO,+BAAV,kCACNC,KAAM,UAKCC,EAlFf,WAEI,OACI,8BACI,6BACI,wBAAIC,UAAY,SAAhB,sBACA,uBAAGA,UAAY,QAAf,yDACA,wBAAIC,MAAS,CAACC,UAAW,SAAUC,WAAY,YAA/C,MACA,uBAAGH,UAAY,QAAf,qBAAwC,uBAAGH,KAAO,6BAAV,cACxC,8BAGJ,kBAACO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAW,GACtBd,EAAUe,KAAI,SAAAC,GAAK,OAChB,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAOF,EAAMf,MAAOkB,GAAM,GAAIC,GAAM,EAAGC,GAAM,GACpD,kBAACC,EAAA,EAAD,CAAMf,UAAY,OAAOgB,UAAa,GAClC,kBAACC,EAAA,EAAD,CACIC,qBAAwB,CAACC,QAAS,MAClCzB,MAASe,EAAMf,MACfC,UAAac,EAAMd,UACnBM,MAAS,CACLC,UAAW,YAGnB,kBAACkB,EAAA,EAAD,CAAanB,MAAS,CAACC,UAAW,WAC9B,kBAACmB,EAAA,EAAD,KACI,uBAAGpB,MAAS,CAACqB,WAAY,OAAQnB,WAAY,YAAaM,EAAMb,MAChE,uBAAGK,MAAS,CAACE,WAAY,YAAY,oCAArC,IAAmDM,EAAMX,iBC1BlFyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b9ec930e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './event.css';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { Container } from '@material-ui/core';\n//import './theme.js';\n\nfunction Event(){\n\n    return (\n        <body>\n            <div>\n                <h1 className = \"title\">BREW FEEDBACK 2021</h1>\n                <p className = \"desc\"> Click the link to ask questions and provide feedback</p>  \n                <h3 style = {{textAlign: 'center', fontFamily: 'Poppins'}}>OR</h3> \n                <p className = \"desc\">Enter the code at <a href = \"https://ahaslides.com/v2/\">AhaSlides</a></p> \n                <br></br> \n            </div>\n\n            <Container>\n                <Grid container spacing = {3}>\n                    {eventList.map(props => ( \n                        <Grid item key = {props.title} xs = {12} md = {6} lg = {4}>\n                            <Card className = \"Card\" elevation = {3}>\n                                <CardHeader\n                                    titleTypographyProps = {{variant: 'h4'}}\n                                    title = {props.title}\n                                    subheader = {props.subheader}\n                                    style = {{\n                                        textAlign: 'center'\n                                    }}\n                                />\n                                <CardContent style = {{textAlign: 'center'}}>\n                                    <Typography>\n                                        <p style = {{fontWeight: 'bold', fontFamily: 'Poppins'}}>{props.link}</p>\n                                        <p style = {{fontFamily: 'Poppins'}}><b>Code:</b> {props.code}</p>\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n\n        </body>\n    );\n}\n\nconst eventList = [\n    {\n        title: \"SCENE SETTING\", \n        subheader: \"16 Dec, 3pm\", // Always display on screen\n       // date: new Date(), // Used to compare with current date time in order to change state\n        link: <a href = \"https://ahaslides.com/BREW1\">SCENE SETTING</a>, \n        code: \"BREW1\"\n    },\n    {\n        title: \"TESLA\", \n        subheader: \"16 Dec, 4:30pm\", \n        link: <a href = \"https://ahaslides.com/BREW2\">TESLA</a>, \n        code: \"BREW2\"\n    }, \n    {\n        title: \"NETFLIX\", \n        subheader: \"16 Dec, 8:30pm\", \n        link: <a href = \"https://ahaslides.com/BREW3\">NETFLIX</a>, \n        code: \"BREW3\"\n    }, \n    {\n        title: \"GE\", \n        subheader: \"17 Dec, 9:30am\", \n        link: <a href = \"https://ahaslides.com/BREW4\">GE</a>, \n        code: \"BREW4\"\n    }, \n    {\n        title: \"AMAZON\", \n        subheader: \"17 Dec, 11:00am\", \n        link: <a href = \"https://ahaslides.com/BREW5\">AMAZON</a>, \n        code: \"BREW5\"\n    },\n    {\n        title: \"General Feedback and Questions\", \n        subheader: \"16 - 18 Dec\", \n        link: <a href = \"https://ahaslides.com/BREW6\">General Feedback and Questions</a>, \n        code: \"BREW6\"\n    }\n\n]\n\nexport default Event;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Event from './event';\nimport reportWebVitals from './reportWebVitals';\nimport Event2 from './event_v2';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Event/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}