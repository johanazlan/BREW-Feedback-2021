{"version":3,"sources":["reportWebVitals.js","event.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","eventList","title","subheader","date","link","href","code","Event","useEffect","interval","setInterval","clearInterval","Helmet","charSet","rel","name","content","className","style","textAlign","fontFamily","Container","fontSize","marginTop","Grid","container","spacing","filter","props","moment","diff","format","map","item","key","xs","md","lg","Card","elevation","CardHeader","titleTypographyProps","variant","CardContent","Typography","fontWeight","marginBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.296f1caf.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from 'react';\nimport './event.css';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { Container } from '@material-ui/core';\nimport moment from 'moment';\nimport { Helmet } from \"react-helmet\";\n\nfunction Event(){\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n      }, 1000);\n      return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div>\n            <Helmet>\n                <meta charSet='utf-8'/>\n                <title>BREW 2021</title>\n                <link rel=\"canonical\" href=\"https://brew2021.invokeisdata.com/\"/>\n                <meta name=\"description\" content=\"BREW 2021 Feedback\" />\n            </Helmet>\n        \n\n        <body>\n            <div>\n                <h1 className = \"title\">BREW FEEDBACK 2021</h1>\n                <p className = \"desc\"> Click the link to ask questions and provide feedback</p>  \n                <h3 style = {{textAlign: 'center', fontFamily: 'Poppins'}}>OR</h3> \n                <p className = \"desc\">Enter the code at <a href = \"https://ahaslides.com/v2/\">AhaSlides</a></p> \n                <br></br> \n            </div>\n\n            {/* Top Grid */}\n            <Container>\n                <p style = {{fontFamily: 'Poppins', fontSize: 24, marginTop: 20}}>Ongoing</p>\n                <Grid container spacing = {3}>\n                    {eventList.filter(props => moment(props.date).diff(moment().format('LLL')) === 0) \n                              .map(props => (\n                                    <Grid item key = {props.title} xs = {12} md = {6} lg = {4}>\n                                        <Card className = \"Card\" elevation = {3}>\n                                            <CardHeader\n                                                titleTypographyProps = {{variant: 'h4'}}\n                                                title = {props.title}\n                                                subheader = {props.subheader}\n                                                style = {{\n                                                    textAlign: 'center'\n                                                }}\n                                            />\n                                            <CardContent style = {{textAlign: 'center'}}>\n                                                <Typography>\n                                                    <p style = {{fontWeight: 'bold', fontFamily: 'Poppins'}}>{props.link}</p>\n                                                    <p style = {{fontFamily: 'Poppins'}}><b>Code:</b> {props.code}</p>\n                                                </Typography>\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                            ))\n                    }       \n                </Grid>\n            </Container>\n\n            {/* General Feedback and Questions */}\n            <Container>\n                <p style = {{fontFamily: 'Poppins', fontSize: 24, marginTop: 80}}>General Feedback and Questions</p>\n                    <Grid container spacing = {3}>\n                        <Grid item xs = {12} md = {6} lg = {4}>\n                            <Card className = \"Card\" elevation = {3}>\n                                <CardHeader\n                                    titleTypographyProps = {{variant: 'h4'}}\n                                    title = {\"General Feedback and Questions\"}\n                                    subheader = {\"16 - 18 Dec\"}\n                                    style = {{\n                                        textAlign: 'center'\n                                    }}\n                                />\n                                <CardContent style = {{textAlign: 'center'}}>\n                                    <Typography>\n                                        <p style = {{fontWeight: 'bold', fontFamily: 'Poppins'}}><a href = \"https://ahaslides.com/BREW6\">General Feedback and Questions</a></p>\n                                        <p style = {{fontFamily: 'Poppins'}}><b>Code:</b> BREW6</p>\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>      \n                </Grid>\n            </Container>\n\n            {/* Middle Grid */}\n            <Container>\n                <p style = {{fontFamily: 'Poppins', fontSize: 24, marginTop: 80}}>Not Started</p>\n                <Grid container spacing = {3}>\n                    {eventList.filter(props => moment(props.date).diff(moment().format('LLL')) > 0) \n                              .map(props => (\n                                    <Grid item key = {props.title} xs = {12} md = {6} lg = {4}>\n                                        <Card className = \"Card\" elevation = {3}>\n                                            <CardHeader\n                                                titleTypographyProps = {{variant: 'h4'}}\n                                                title = {props.title}\n                                                subheader = {props.subheader}\n                                                style = {{\n                                                    textAlign: 'center'\n                                                }}\n                                            />\n                                            <CardContent style = {{textAlign: 'center'}}>\n                                                <Typography>\n                                                    <p style = {{fontWeight: 'bold', fontFamily: 'Poppins'}}>{props.link}</p>\n                                                    <p style = {{fontFamily: 'Poppins'}}><b>Code:</b> {props.code}</p>\n                                                </Typography>\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                            ))\n                    }       \n                </Grid>\n            </Container> \n\n\n            {/* props.date is the event start time \n                if (Event start time - current time) > 0\n                    then event NOT STARTED\n            */}\n            <Container style = {{marginBottom: 80}}>\n                <p style = {{fontFamily: 'Poppins', fontSize: 24, marginTop: 80}}>Completed</p>\n                <Grid container spacing = {3}>\n                    {eventList.filter(props => moment(props.date).diff(moment().format('LLL')) < 0) \n                              .map(props => (\n                                    <Grid item key = {props.title} xs = {12} md = {6} lg = {4}>\n                                        <Card className = \"Card\" elevation = {3}>\n                                            <CardHeader\n                                                titleTypographyProps = {{variant: 'h4'}}\n                                                title = {props.title}\n                                                subheader = {props.subheader}\n                                                style = {{\n                                                    textAlign: 'center'\n                                                }}\n                                            />\n                                            <CardContent style = {{textAlign: 'center'}}>\n                                                <Typography>\n                                                    <p style = {{fontWeight: 'bold', fontFamily: 'Poppins'}}>{props.link}</p>\n                                                    <p style = {{fontFamily: 'Poppins'}}><b>Code:</b> {props.code}</p>\n                                                </Typography>\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                            ))\n                    }       \n                </Grid>\n            </Container>\n        </body>\n        </div>\n    );\n}\n\nconst eventList = [\n    {\n        title: \"SCENE SETTING\", \n        subheader: \"16 Dec, 3pm\", // Always display on screen\n        date: \"December 16, 2021 3:00 PM\", // Used to compare with current date time in order to change state\n        link: <a href = \"https://ahaslides.com/BREW1\">SCENE SETTING</a>, \n        code: \"BREW1\"\n    },\n    {\n        title: \"TESLA\", \n        subheader: \"16 Dec, 4:30pm\", \n        date: \"December 16, 2021 4:30 PM\",\n        link: <a href = \"https://ahaslides.com/BREW2\">TESLA</a>, \n        code: \"BREW2\"\n    }, \n    {\n        title: \"NETFLIX\", \n        subheader: \"16 Dec, 8:30pm\", \n        date: \"December 16, 2021 8:30 PM\",\n        link: <a href = \"https://ahaslides.com/BREW3\">NETFLIX</a>, \n        code: \"BREW3\"\n    }, \n    {\n        title: \"GE\", \n        subheader: \"17 Dec, 9:30am\", \n        date: \"December 17, 2021 9:30 AM\",\n        link: <a href = \"https://ahaslides.com/BREW4\">GE</a>, \n        code: \"BREW4\"\n    }, \n    {\n        title: \"AMAZON\", \n        subheader: \"17 Dec, 11:00am\", \n        date: \"December 17, 2021 11:00 AM\",\n        link: <a href = \"https://ahaslides.com/BREW5\">AMAZON</a>, \n        code: \"BREW5\"\n    }\n]\n\nexport default Event;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Event from './event_old';\nimport reportWebVitals from './reportWebVitals';\nimport Event from './event';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Event/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}